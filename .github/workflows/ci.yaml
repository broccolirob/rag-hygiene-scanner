name: ci

on:
  push:
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v6
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Pre-commit
        run: |
          pip install pre-commit
          pre-commit run --all-files

      - name: Bandit security scan
        run: |
          pip install bandit
          bandit -r src -f txt -o bandit_report.txt || true

      - name: Upload bandit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit_report.txt

  build-test:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -e . pytest

      - name: Unit tests
        run: pytest -q

      - name: Run CLI on examples (JSON, fail-on med)
        id: scan_json
        run: |
          set -o pipefail
          rag-scan examples --format json --fail-on med --summary > rag_findings.json 2> summary.txt || echo "scan_exit=$?" >> $GITHUB_OUTPUT

      - name: Run CLI on examples (CSV, summary only)
        run: |
          rag-scan examples --format csv -o rag_findings.csv --summary 2>> summary.txt || true

      - name: Print summary to job summary
        if: always()
        run: |
          echo "### RAG scan summary" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          cat summary.txt >> $GITHUB_STEP_SUMMARY || true
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Third-party licenses (JSON)
        run: |
          pip install pip-licenses
          pip-licenses --format=json --output-file third_party_licenses.json

      - name: Upload license report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: third_party_licenses-${{ matrix.python-version }}
          path: third_party_licenses.json

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rag-scan-artifacts-${{ matrix.python-version }}
          path: |
            rag_findings.json
            rag_findings.csv
            summary.txt
          if-no-files-found: warn
